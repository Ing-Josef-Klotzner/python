0x000000: 23 21 2F 75 73 72 2F 62 | 69 6E 2F 70 79 74 68 6F #!/usr/bin/pytho
0x000010: 6E 0A 23 20 2D 2A 2D 20 | 63 6F 64 69 6E 67 3A 20 n.# -*- coding: 
0x000020: 75 74 66 2D 38 20 2D 2A | 2D 0A 66 72 6F 6D 20 5F utf-8 -*-.from _
0x000030: 5F 66 75 74 75 72 65 5F | 5F 20 69 6D 70 6F 72 74 _future__ import
0x000040: 20 61 62 73 6F 6C 75 74 | 65 5F 69 6D 70 6F 72 74  absolute_import
0x000050: 2C 20 64 69 76 69 73 69 | 6F 6E 2C 20 75 6E 69 63 , division, unic
0x000060: 6F 64 65 5F 6C 69 74 65 | 72 61 6C 73 2C 20 70 72 ode_literals, pr
0x000070: 69 6E 74 5F 66 75 6E 63 | 74 69 6F 6E 0A 22 22 22 int_function."""
0x000080: 0A 43 72 65 61 74 65 64 | 20 6F 6E 20 57 65 64 20 .Created on Wed 
0x000090: 4A 75 6C 20 32 36 20 31 | 39 3A 35 35 3A 35 31 20 Jul 26 19:55:51 
0x0000a0: 32 30 31 37 0A 0A 40 61 | 75 74 68 6F 72 3A 20 6A 2017..@author: j
0x0000b0: 6F 73 65 66 0A 22 22 22 | 0A 0A 69 6D 70 6F 72 74 osef."""..import
0x0000c0: 20 61 72 67 70 61 72 73 | 65 0A 0A 64 65 66 20 6D  argparse..def m
0x0000d0: 61 69 6E 28 29 3A 0A 20 | 20 20 20 70 61 72 73 65 ain():.    parse
0x0000e0: 72 20 3D 20 61 72 67 70 | 61 72 73 65 2E 41 72 67 r = argparse.Arg
0x0000f0: 75 6D 65 6E 74 50 61 72 | 73 65 72 28 29 0A 20 20 umentParser().  
0x000100: 20 20 70 61 72 73 65 72 | 2E 61 64 64 5F 61 72 67   parser.add_arg
0x000110: 75 6D 65 6E 74 28 27 66 | 69 6C 65 27 2C 20 68 65 ument('file', he
0x000120: 6C 70 3D 27 53 70 65 63 | 69 66 79 20 61 20 66 69 lp='Specify a fi
0x000130: 6C 65 27 29 0A 20 20 20 | 20 70 61 72 73 65 72 2E le').    parser.
0x000140: 61 64 64 5F 61 72 67 75 | 6D 65 6E 74 28 27 2D 73 add_argument('-s
0x000150: 27 2C 20 27 2D 2D 73 63 | 72 65 65 6E 27 2C 20 68 ', '--screen', h
0x000160: 65 6C 70 3D 27 50 72 69 | 6E 74 20 6F 75 74 70 75 elp='Print outpu
0x000170: 74 20 74 6F 20 54 65 72 | 6D 69 6E 61 6C 27 29 0A t to Terminal').
0x000180: 20 20 20 20 0A 20 20 20 | 20 61 72 67 73 20 3D 20     .    args = 
0x000190: 70 61 72 73 65 72 2E 70 | 61 72 73 65 5F 61 72 67 parser.parse_arg
0x0001a0: 73 28 29 0A 20 20 20 20 | 0A 20 20 20 20 69 66 20 s().    .    if 
0x0001b0: 61 72 67 73 2E 66 69 6C | 65 3A 0A 20 20 20 20 20 args.file:.     
0x0001c0: 20 20 20 6F 66 66 73 65 | 74 20 3D 20 30 0A 20 20    offset = 0.  
0x0001d0: 20 20 20 20 20 20 77 69 | 74 68 20 6F 70 65 6E 28       with open(
0x0001e0: 61 72 67 73 2E 66 69 6C | 65 2C 20 27 72 62 27 29 args.file, 'rb')
0x0001f0: 20 61 73 20 69 6E 66 69 | 6C 65 3A 0A 20 20 20 20  as infile:.    
0x000200: 20 20 20 20 20 20 20 20 | 77 69 74 68 20 6F 70 65         with ope
0x000210: 6E 28 61 72 67 73 2E 66 | 69 6C 65 2B 27 2E 64 75 n(args.file+'.du
0x000220: 6D 70 27 2C 20 27 77 27 | 29 20 61 73 20 6F 75 74 mp', 'w') as out
0x000230: 66 69 6C 65 3A 0A 20 20 | 20 20 20 20 20 20 20 20 file:.          
0x000240: 20 20 20 20 20 20 77 68 | 69 6C 65 20 54 72 75 65       while True
0x000250: 3A 0A 20 20 20 20 20 20 | 20 20 20 20 20 20 20 20 :.              
0x000260: 20 20 20 20 20 20 63 68 | 75 6E 6B 20 3D 20 69 6E       chunk = in
0x000270: 66 69 6C 65 2E 72 65 61 | 64 28 31 36 29 0A 20 20 file.read(16).  
0x000280: 20 20 20 20 20 20 20 20 | 20 20 20 20 20 20 20 20                 
0x000290: 20 20 69 66 20 6C 65 6E | 28 63 68 75 6E 6B 29 20   if len(chunk) 
0x0002a0: 3D 3D 20 30 3A 0A 20 20 | 20 20 20 20 20 20 20 20 == 0:.          
0x0002b0: 20 20 20 20 20 20 20 20 | 20 20 20 20 20 20 62 72               br
0x0002c0: 65 61 6B 0A 20 20 20 20 | 20 20 20 20 20 20 20 20 eak.            
0x0002d0: 20 20 20 20 20 20 20 20 | 74 65 78 74 20 3D 20 73         text = s
0x0002e0: 74 72 28 63 68 75 6E 6B | 29 0A 20 20 20 20 20 20 tr(chunk).      
0x0002f0: 20 20 20 20 20 20 20 20 | 20 20 20 20 20 20 74 65               te
0x000300: 78 74 20 3D 20 27 27 2E | 6A 6F 69 6E 28 5B 69 20 xt = ''.join([i 
0x000310: 69 66 20 6F 72 64 28 69 | 29 20 3C 20 31 32 38 20 if ord(i) < 128 
0x000320: 61 6E 64 20 6F 72 64 28 | 69 29 20 3E 20 33 31 20 and ord(i) > 31 
0x000330: 65 6C 73 65 20 27 2E 27 | 20 66 6F 72 20 69 20 69 else '.' for i i
0x000340: 6E 20 74 65 78 74 5D 29 | 0A 20 20 20 20 20 20 20 n text]).       
0x000350: 20 20 20 20 20 20 20 20 | 20 20 20 20 20 6F 75 74              out
0x000360: 70 75 74 20 3D 20 27 7B | 3A 23 30 38 78 7D 27 2E put = '{:#08x}'.
0x000370: 66 6F 72 6D 61 74 28 6F | 66 66 73 65 74 29 20 2B format(offset) +
0x000380: 20 27 3A 20 27 0A 20 20 | 20 20 20 20 20 20 20 20  ': '.          
0x000390: 20 20 20 20 20 20 20 20 | 20 20 6F 75 74 70 75 74           output
0x0003a0: 20 2B 3D 20 27 20 27 2E | 6A 6F 69 6E 28 27 7B 3A  += ' '.join('{:
0x0003b0: 30 32 58 7D 27 2E 66 6F | 72 6D 61 74 28 6F 72 64 02X}'.format(ord
0x0003c0: 28 63 29 29 20 66 6F 72 | 20 63 20 69 6E 20 63 68 (c)) for c in ch
0x0003d0: 75 6E 6B 5B 3A 38 5D 29 | 0A 20 20 20 20 20 20 20 unk[:8]).       
0x0003e0: 20 20 20 20 20 20 20 20 | 20 20 20 20 20 69 66 20              if 
0x0003f0: 6C 65 6E 28 63 68 75 6E | 6B 29 20 3E 20 38 3A 20 len(chunk) > 8: 
0x000400: 20 20 20 20 20 20 20 20 | 20 20 20 20 20 20 20 20                 
0x000410: 20 20 20 0A 20 20 20 20 | 20 20 20 20 20 20 20 20    .            
0x000420: 20 20 20 20 20 20 20 20 | 20 20 20 20 6F 75 74 70             outp
0x000430: 75 74 20 2B 3D 20 27 20 | 7C 20 27 0A 20 20 20 20 ut += ' | '.    
0x000440: 20 20 20 20 20 20 20 20 | 20 20 20 20 20 20 20 20                 
0x000450: 20 20 20 20 6F 75 74 70 | 75 74 20 2B 3D 20 27 20     output += ' 
0x000460: 27 2E 6A 6F 69 6E 28 27 | 7B 3A 30 32 58 7D 27 2E '.join('{:02X}'.
0x000470: 66 6F 72 6D 61 74 28 6F | 72 64 28 63 29 29 20 66 format(ord(c)) f
0x000480: 6F 72 20 63 20 69 6E 20 | 63 68 75 6E 6B 5B 38 3A or c in chunk[8:
0x000490: 5D 29 0A 20 20 20 20 20 | 20 20 20 20 20 20 20 20 ]).             
0x0004a0: 20 20 20 20 20 20 20 20 | 20 20 20 6F 75 74 70 75            outpu
0x0004b0: 74 20 2B 3D 20 27 20 27 | 0A 20 20 20 20 20 20 20 t += ' '.       
0x0004c0: 20 20 20 20 20 20 20 20 | 20 20 20 20 20 65 6C 73              els
0x0004d0: 65 3A 0A 20 20 20 20 20 | 20 20 20 20 20 20 20 20 e:.             
0x0004e0: 20 20 20 20 20 20 20 20 | 20 20 20 6F 75 74 70 75            outpu
0x0004f0: 74 20 2B 3D 20 27 20 20 | 20 27 0A 20 20 20 20 20 t += '   '.     
0x000500: 20 20 20 20 20 20 20 20 | 20 20 20 20 20 20 20 69                i
0x000510: 66 20 6C 65 6E 28 63 68 | 75 6E 6B 29 20 25 20 31 f len(chunk) % 1
0x000520: 36 20 21 3D 20 30 3A 0A | 20 20 20 20 20 20 20 20 6 != 0:.        
0x000530: 20 20 20 20 20 20 20 20 | 20 20 20 20 20 20 20 20                 
0x000540: 6F 75 74 70 75 74 20 2B | 3D 20 27 20 20 20 27 2A output += '   '*
0x000550: 28 31 36 2D 6C 65 6E 28 | 63 68 75 6E 6B 29 29 20 (16-len(chunk)) 
0x000560: 2B 20 74 65 78 74 0A 20 | 20 20 20 20 20 20 20 20 + text.         
0x000570: 20 20 20 20 20 20 20 20 | 20 20 20 65 6C 73 65 3A            else:
0x000580: 0A 20 20 20 20 20 20 20 | 20 20 20 20 20 20 20 20 .               
0x000590: 20 20 20 20 20 20 20 20 | 20 6F 75 74 70 75 74 20          output 
0x0005a0: 2B 3D 20 74 65 78 74 0A | 20 20 20 20 20 20 20 20 += text.        
0x0005b0: 20 20 20 20 20 20 20 20 | 20 20 20 20 69 66 20 61             if a
0x0005c0: 72 67 73 2E 73 63 72 65 | 65 6E 3A 0A 20 20 20 20 rgs.screen:.    
0x0005d0: 20 20 20 20 20 20 20 20 | 20 20 20 20 20 20 20 20                 
0x0005e0: 20 20 20 20 70 72 69 6E | 74 20 28 6F 75 74 70 75     print (outpu
0x0005f0: 74 29 0A 20 20 20 20 20 | 20 20 20 20 20 20 20 20 t).             
0x000600: 20 20 20 20 20 20 20 6F | 75 74 66 69 6C 65 2E 77        outfile.w
0x000610: 72 69 74 65 28 6F 75 74 | 70 75 74 20 2B 20 27 5C rite(output + '\
0x000620: 6E 27 29 0A 20 20 20 20 | 20 20 20 20 20 20 20 20 n').            
0x000630: 20 20 20 20 20 20 20 20 | 6F 66 66 73 65 74 20 2B         offset +
0x000640: 3D 20 31 36 0A 20 20 20 | 20 65 6C 73 65 3A 0A 20 = 16.    else:. 
0x000650: 20 20 20 20 20 20 20 70 | 72 69 6E 74 20 28 70 61        print (pa
0x000660: 72 73 65 72 2E 75 73 61 | 67 65 29 0A 0A 69 66 20 rser.usage)..if 
0x000670: 5F 5F 6E 61 6D 65 5F 5F | 20 3D 3D 20 27 5F 5F 6D __name__ == '__m
0x000680: 61 69 6E 5F 5F 27 3A 0A | 20 20 20 20 6D 61 69 6E ain__':.    main
0x000690: 28 29                                             ()
